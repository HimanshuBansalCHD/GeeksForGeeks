/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int sum(TreeNode root,int d){
        if(root==null){
            return 0;
        }
        if(d==1){
            return root.val;
        }
        return sum(root.left,d-1)+sum(root.right,d-1);
    }
    public int deepestLeavesSum(TreeNode root) {
        if(root==null){
            return 0;
        }
        int d=maxd(root);
        return sum(root,d);
    }
    public int maxd(TreeNode root){
        if(root==null){
            return 0;
        }
        int lh=maxd(root.left);
        int rh=maxd(root.right);
        return Math.max(lh,rh)+1;
    }
}
